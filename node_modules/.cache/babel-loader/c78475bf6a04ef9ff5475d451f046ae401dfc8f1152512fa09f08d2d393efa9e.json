{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nevzatcan\\\\liste-app-2\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ListeForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Liste = _ref => {\n  _s();\n  let {\n    listeler,\n    completeListe,\n    removeListe,\n    updateListe\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  const submitUpdate = value => {\n    updateListe(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(ListeForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return listeler.map((liste, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: liste.isComplete ? 'liste-row complete' : 'liste-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeListe(liste.id),\n      children: liste.text\n    }, liste.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeListe(liste.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: liste.id,\n          value: liste.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n};\n_s(Liste, \"yNsriMnMMfyG4swHz2ZbmBWu/qY=\");\n_c = Liste;\nexport default Liste;\nvar _c;\n$RefreshReg$(_c, \"Liste\");","map":{"version":3,"names":["React","useState","ListeForm","RiCloseCircleLine","TiEdit","Liste","listeler","completeListe","removeListe","updateListe","edit","setEdit","id","value","submitUpdate","map","liste","index","isComplete","text"],"sources":["C:/Users/Nevzatcan/liste-app-2/src/components/Todo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ListeForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Liste = ({ listeler, completeListe, removeListe, updateListe }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateListe(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <ListeForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return listeler.map((liste, index) => (\r\n    <div\r\n      className={liste.isComplete ? 'liste-row complete' : 'liste-row'}\r\n      key={index}\r\n    >\r\n      <div key={liste.id} onClick={() => completeListe(liste.id)}>\r\n        {liste.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeListe(liste.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: liste.id, value: liste.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Liste;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,MAAM,QAAQ,gBAAgB;AAAC;AAExC,MAAMC,KAAK,GAAG,QAA2D;EAAA;EAAA,IAA1D;IAAEC,QAAQ;IAAEC,aAAa;IAAEC,WAAW;IAAEC;EAAY,CAAC;EAClE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGD,KAAK,IAAI;IAC5BJ,WAAW,CAACC,IAAI,CAACE,EAAE,EAAEC,KAAK,CAAC;IAC3BF,OAAO,CAAC;MACNC,EAAE,EAAE,IAAI;MACRC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,IAAIH,IAAI,CAACE,EAAE,EAAE;IACX,oBAAO,QAAC,SAAS;MAAC,IAAI,EAAEF,IAAK;MAAC,QAAQ,EAAEI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAC1D;EAEA,OAAOR,QAAQ,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/B;IACE,SAAS,EAAED,KAAK,CAACE,UAAU,GAAG,oBAAoB,GAAG,WAAY;IAAA,wBAGjE;MAAoB,OAAO,EAAE,MAAMX,aAAa,CAACS,KAAK,CAACJ,EAAE,CAAE;MAAA,UACxDI,KAAK,CAACG;IAAI,GADHH,KAAK,CAACJ,EAAE;MAAA;MAAA;MAAA;IAAA,QAEZ,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,wBACpB,QAAC,iBAAiB;QAChB,OAAO,EAAE,MAAMJ,WAAW,CAACQ,KAAK,CAACJ,EAAE,CAAE;QACrC,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eACF,QAAC,MAAM;QACL,OAAO,EAAE,MAAMD,OAAO,CAAC;UAAEC,EAAE,EAAEI,KAAK,CAACJ,EAAE;UAAEC,KAAK,EAAEG,KAAK,CAACG;QAAK,CAAC,CAAE;QAC5D,SAAS,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,GAdDF,KAAK;IAAA;IAAA;IAAA;EAAA,QAgBb,CAAC;AACJ,CAAC;AAAC,GAtCIZ,KAAK;AAAA,KAALA,KAAK;AAwCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}